{"version":3,"file":"singletons-4da95bcf.js","sources":["../../../../../../node_modules/svelte/store/index.mjs","../../../../../../node_modules/@sveltejs/kit/src/runtime/paths.js","../../../../../../node_modules/@sveltejs/kit/src/runtime/client/utils.js","../../../../../../node_modules/@sveltejs/kit/src/runtime/client/singletons.js"],"sourcesContent":["import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/** @type {string} */\nexport let base = '';\n\n/** @type {string} */\nexport let assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nexport function set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n","import { writable } from 'svelte/store';\nimport { assets } from '../paths.js';\n\n/* global __SVELTEKIT_APP_VERSION__, __SVELTEKIT_APP_VERSION_FILE__, __SVELTEKIT_APP_VERSION_POLL_INTERVAL__ */\n\n/** @param {HTMLDocument} doc */\nexport function get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nexport function scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nexport function find_anchor(event) {\n\t/** @type {HTMLAnchorElement | SVGAElement | undefined} */\n\tlet a;\n\n\t/** @type {boolean | null} */\n\tlet noscroll = null;\n\n\t/** @type {boolean | null} */\n\tlet prefetch = null;\n\n\t/** @type {boolean | null} */\n\tlet reload = null;\n\n\tfor (const element of event.composedPath()) {\n\t\tif (!(element instanceof Element)) continue;\n\n\t\tif (!a && element.nodeName.toUpperCase() === 'A') {\n\t\t\t// SVG <a> elements have a lowercase name\n\t\t\ta = /** @type {HTMLAnchorElement | SVGAElement} */ (element);\n\t\t}\n\n\t\tif (noscroll === null) noscroll = get_link_option(element, 'data-sveltekit-noscroll');\n\t\tif (prefetch === null) prefetch = get_link_option(element, 'data-sveltekit-prefetch');\n\t\tif (reload === null) reload = get_link_option(element, 'data-sveltekit-reload');\n\t}\n\n\tconst url = a && new URL(a instanceof SVGAElement ? a.href.baseVal : a.href, document.baseURI);\n\n\treturn {\n\t\ta,\n\t\turl,\n\t\toptions: {\n\t\t\tnoscroll,\n\t\t\tprefetch,\n\t\t\treload\n\t\t},\n\t\thas: a\n\t\t\t? {\n\t\t\t\t\trel_external: (a.getAttribute('rel') || '').split(/\\s+/).includes('external'),\n\t\t\t\t\tdownload: a.hasAttribute('download'),\n\t\t\t\t\ttarget: !!(a instanceof SVGAElement ? a.target.baseVal : a.target)\n\t\t\t  }\n\t\t\t: {}\n\t};\n}\n\nconst warned = new WeakSet();\n\n/**\n * @param {Element} element\n * @param {string} attribute\n */\nfunction get_link_option(element, attribute) {\n\tconst value = element.getAttribute(attribute);\n\tif (value === null) return value;\n\n\tif (value === '') return true;\n\tif (value === 'off') return false;\n\n\tif (__SVELTEKIT_DEV__ && !warned.has(element)) {\n\t\tconsole.error(`Unexpected value for ${attribute} â€” should be \"\" or \"off\"`, element);\n\t\twarned.add(element);\n\t}\n\n\treturn false;\n}\n\n/** @param {any} value */\nexport function notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nexport function create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = __SVELTEKIT_APP_VERSION_POLL_INTERVAL__;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst res = await fetch(`${assets}/${__SVELTEKIT_APP_VERSION_FILE__}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== __SVELTEKIT_APP_VERSION__;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n","import { writable } from 'svelte/store';\nimport { create_updated_store, notifiable_store } from './utils.js';\n\n/** @type {import('./types').Client} */\nexport let client;\n\n/**\n * @param {{\n *   client: import('./types').Client;\n * }} opts\n */\nexport function init(opts) {\n\tclient = opts.client;\n}\n\nexport const stores = {\n\turl: notifiable_store({}),\n\tpage: notifiable_store({}),\n\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\tupdated: create_updated_store()\n};\n"],"names":["subscriber_queue","writable","value","start","noop","stop","subscribers","set","new_value","safe_not_equal","run_queue","subscriber","update","fn","subscribe","run","invalidate","base","assets","set_paths","paths","get_base_uri","doc","baseURI","baseTags","scroll_state","find_anchor","event","a","noscroll","prefetch","reload","element","get_link_option","url","attribute","notifiable_store","store","ready","notify","val","old_value","create_updated_store","timeout","check","res","version","updated","init","opts","stores"],"mappings":"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"}